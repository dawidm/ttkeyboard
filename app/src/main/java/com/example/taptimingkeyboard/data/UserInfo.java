package com.example.taptimingkeyboard.data;

import androidx.annotation.Nullable;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

/**
 * Stores information about keyboard user.
 */
@Entity(tableName = "user_info")
public class UserInfo {

    private static final String DEFAULT_USER_NAME = "Default user";

    public enum Sex {
        MALE,
        FEMALE
    }

    public enum Asymmetry {
        RIGHT,
        LEFT,
        NO_ASYMMETRY,
        NOT_SPECIFIED
    }

    public enum Handedness {
        RIGHT,
        LEFT
    }


    @PrimaryKey(autoGenerate = true)
    private long id;
    private String firstName;
    private String lastName;
    private int age;
    private Sex sex;
    private Handedness handedness;
    private boolean diagnosedWithPD;
    @Nullable
    private Asymmetry symptomsAsymmetry;
    @Nullable
    private Boolean onMedication;
    @Nullable
    private String email;

    /**
     * Instantiates a new User info.
     *
     * @param firstName         see {@link #getFirstName()}
     * @param lastName          see {@link #getLastName()}
     * @param age               see {@link #getAge()}
     * @param sex               see {@link #getSex()}
     * @param handedness        see {@link #getHandedness()}
     * @param diagnosedWithPD   see {@link #diagnosedWithPD}
     * @param symptomsAsymmetry see {@link #symptomsAsymmetry}
     * @param onMedication      see {@link #getOnMedication()}
     */
    public UserInfo(String firstName, String lastName, int age, Sex sex, Handedness handedness, boolean diagnosedWithPD, @Nullable Asymmetry symptomsAsymmetry, @Nullable Boolean onMedication, @Nullable String email) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.sex = sex;
        this.handedness = handedness;
        this.diagnosedWithPD = diagnosedWithPD;
        this.symptomsAsymmetry = symptomsAsymmetry;
        this.onMedication = onMedication;
        this.email = email;
    }

    /**
     * Sets id.
     *
     * @param id see {@link #getId()}
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Gets id.
     *
     * @return The unique id (auto generated by Room Library)
     */
    public long getId() {
        return id;
    }

    /**
     * Gets first name.
     *
     * @return The first name of the keyboard user.
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Gets last name.
     *
     * @return The last name of the keyboard user.
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Gets age.
     *
     * @return The age of the keyboard user.
     */
    public int getAge() {
        return age;
    }

    /**
     * Gets sex.
     *
     * @return The sex of the keyboard user.
     */
    public Sex getSex() {
        return sex;
    }

    /**
     * Gets handedness.
     *
     * @return The handedness of the keyboard user.
     */
    public Handedness getHandedness() {
        return handedness;
    }

    /**
     * Gets isDiagnosedWithPD
     *
     * @return Whether the user is diagnosed with Parkinson's disease
     */
    public boolean isDiagnosedWithPD() {
        return diagnosedWithPD;
    }

    /**
     * Gets symptoms asymmetry.
     *
     * @return User's Parkinson's disease symptoms asymmetry.
     */
    public Asymmetry getSymptomsAsymmetry() {
        return symptomsAsymmetry;
    }

    /**
     * Gets onMedication.
     *
     * @return Whether the user user takes any Parkinson's disease medication.
     */
    @Nullable
    public Boolean getOnMedication() {
        return onMedication;
    }

    /**
     * Gets email.
     *
     * @return the email
     */
    @Nullable
    public String getEmail() {
        return email;
    }

    /**
     * Sets email.
     *
     * @param email the email
     */
    public void setEmail(@Nullable String email) {
        this.email = email;
    }

    @Override
    public String toString() {
        if(this.getFirstName().equals(DEFAULT_USER_NAME))
            return DEFAULT_USER_NAME;
        else
            return firstName+" "+lastName+", id: " + id;
    }

    /**
     * Default UserInfo
     *
     * @return The instance of UserInfo to be used by application when no other users were added.
     */
    public static UserInfo defaultUser() {
        return new UserInfo(DEFAULT_USER_NAME,"",0,Sex.MALE,Handedness.RIGHT,false,null,null, null);
    }
}
